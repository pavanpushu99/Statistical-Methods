---
title: "STAT 652 : Homework 1"
author: "Pavan Malapati"
format: html
editor: visual
---

**9.9 Exercises, Problem 2**: Calculate and interpret a 95% confidence interval for the mean age of mothers from the`Gestation`data set from the`mosaicData`package.
**Answer :** To calculate a 95% confidence interval for the mean age of mothers from the "Gestation" dataset, first, we need to load the data and ensure there are no missing values in the age variable. Then, we compute the sample mean and standard deviation of the ages. Next, we calculate the standard error of the mean, determine the z-score associated with a 95% confidence interval, and compute the margin of error. Finally, we construct the confidence interval by subtracting and adding the margin of error to the sample mean. The resulting interval provides an estimated range within which we are 95% confident that the true mean age of mothers lies.
```{r}
#install.packages("mosaicData")
library(mosaicData)
data("Gestation")
mv <- sum(is.na(Gestation$age))
if (mv > 0) {
  Gestation <- Gestation[complete.cases(Gestation$age), ]
}
ma <- round(mean(Gestation$age),3)
sda <- round(sd(Gestation$age),3)
e <- sda/sqrt(length(Gestation$age))
#Since it is 95% confidence interval which equals to alpha=0.05 then from the normality table
z <- 1.96
me <- z*e
ci <- c(ma-me,ma+me)
round(ci,3)
```

**9.9 Exercises, Problem 3**: Use the bootstrap to generate and interpret a 95% confidence interval for the median age of mothers for the`Gestation`data set from the`mosaicData`package.

**Answer :**To generate a 95% confidence interval for the median age of mothers using the bootstrap method with the "Gestation" dataset, we can resample with replacement from the original dataset multiple times to create bootstrap samples. For each bootstrap sample, we calculate the median age. After generating a large number of bootstrap medians, we determine the 2.5th and 97.5th percentiles of these bootstrap medians, which forms the 95% confidence interval. 

*Explanation of code* : This code utilizes the *replicate* function to perform bootstrapping 1000 times. Within each iteration, it samples from the "Gestation" dataset with replacement using *slice_sample*, where a small random value generated by *runif* impacts each age value. It then determines the affected sample's median. After all iterations, it computes the 95% confidence interval for the bootstrap medians using *quantile*, considering potential variability introduced by sampling and random perturbation of age values.
```{r}
#install.packages("dplyr)
bm <- replicate(1000,{
     s <- dplyr :: slice_sample(Gestation,prop = 1,replace = TRUE)
     median(s$age + runif(length(s$age), min = 0, max = 0.99))
})
ci2 <- quantile(bm,c(0.025,0.975),na.rm = FALSE)                     
round(ci2,3)    
```
